@using ExcelManagement.DxBlazor.Data
@using ExcelManagement.DxBlazor.Pages
@using ExcelManagement.ClassLibary

@using ClosedXML.Excel

@page "/"

@*Logo*@
<div style="width: 100%; height: auto; display: flex; justify-content: center;">
    <img src="/images/index.png" style="width: 50%" />
</div>
<p> </p>
<p> </p>

@*Loading Animation*@
@if (IsLoadingRender)
{
    <div class="text-center">
        <div class="spinner-border text-secondary" role="status">
            <span class="sr-only">Loading</span>
        </div>
        <h2>Loading...</h2>
    </div>
}
else
{
    if (!IsWorkbookSelected) //Select Sheet
    {
        <h3>Please select a excel document:</h3>
        <p></p>
        <DxComboBox Data="@Files"
            NullText="Select a File..."
            Value="@SelectedFile"
            ValueChanged="(string fileName) => { SelectedFile = fileName; UpdateFileSelection(SelectedFile); }">
        </DxComboBox>
    }

    else //If Sheet Has Been Selected
    {
        <TabComponent SelectedFile="@SelectedFile"></TabComponent>
    }
}

@code {
    //Loading
    bool IsLoadingRender { get; set; } = true;
    bool IsWorkbookSelected { get; set; } = false;
    //Files
    private string SelectedFile { get; set; }
    private List<string> Files { get; set; } = new List<string>();

    //---------------------------------------------------------------------------//
    /* Razor Page                                                                */
    //---------------------------------------------------------------------------//

    protected override async Task OnInitializedAsync()
    {

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            GetFiles();

            IsLoadingRender = false;
            StateHasChanged();
        }
    }

    //On Combobox Change
    private void UpdateFileSelection(string selectedFile)
    {
        IsWorkbookSelected = true;
        StateHasChanged();
    }

    //Get files in from dirictory.
    private void GetFiles(string directoryPath = @"..\ExcelDocuments")
    {
        var fileNames = Directory.GetFiles(directoryPath, "*.xlsx");
        Files.AddRange(fileNames.Select(fileName => Path.GetFileNameWithoutExtension(fileName)));
    }
}